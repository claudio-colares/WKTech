unit RecordPedidoDAO;

interface

uses
  RecordPedido, RecordItemPedido, System.SysUtils, FireDAC.Comp.Client;

type
  TPedidoDAO = record
  private
    Conexao: TFDConnection;
  public
    constructor Create(AConexao: TFDConnection);

    function SalvarPedido(Pedido: TPedido): Boolean;
    function ConsultarPedido(NumeroPedido: Integer): TPedido;
    function CancelarPedido(NumeroPedido: Integer): Boolean;
  end;

implementation

{ TPedidoDAO }

function TPedidoDAO.CancelarPedido(NumeroPedido: Integer): Boolean;
var
  QryPedido: TFDQuery;

begin
  QryPedido := TFDQuery.Create(nil);

  try
    QryPedido.Connection := Conexao;
    Conexao.StartTransaction;

    QryPedido.SQL.Clear;
    QryPedido.SQL.Add('DELETE FROM pedidos WHERE numero_pedido LIKE  ' + NumeroPedido.ToString);
    QryPedido.ExecSQL;

  finally
    QryPedido.Free
  end;
end;

function TPedidoDAO.ConsultarPedido(NumeroPedido: Integer): TPedido;
begin
  //
end;

constructor TPedidoDAO.Create(AConexao: TFDConnection);
begin
  Conexao := AConexao;
end;

function TPedidoDAO.SalvarPedido(Pedido: TPedido): Boolean;
var
  QryPedido: TFDQuery;
  Item     : TItemPedido;
begin
  Result    := False;
  QryPedido := TFDQuery.Create(nil);
  try
    QryPedido.Connection := Conexao;
    Conexao.StartTransaction;

    try

      //---------------------------------------------------------------------------------
      // Inserindo o pedido na tabela 'pedidos'
      //---------------------------------------------------------------------------------
      QryPedido.SQL.Clear;
      QryPedido.SQL.Text := 'INSERT INTO pedidos (data_emissao,codigo_cliente,valor_total)'+
                            ' VALUES (:data_emissao, :codigo_cliente,:valor_total)';

      QryPedido.ParamByName('data_emissao').AsDate      := Pedido.DataEmissao;
      QryPedido.ParamByName('codigo_cliente').AsInteger := Pedido.Cliente.Codigo;
      QryPedido.ParamByName('valor_total').AsCurrency   := Pedido.ValorTotal;
      //---------------------------------------------------------------------------------


      //---------------------------------------------------------------------------------
      // Recuperando o numero do pedigo gerado
      //---------------------------------------------------------------------------------
      QryPedido.SQL.Clear;
      QryPedido.SQL.Text := 'SELECT LAST_INSERT_ID() AS NumeroPedido';
      QryPedido.Open;

      if not QryPedido.IsEmpty then
        Pedido.NumeroPedido := QryPedido.FieldByName('NumeroPedido').AsInteger;

      QryPedido.Close;
      //---------------------------------------------------------------------------------






    except
      on E: Exception do
      begin
        Conexao.Rollback;
        raise Exception.Create('Erro ao salvar o pedido'+ E.Message);
      end;
    end;

  finally
    QryPedido.Free;
  end;
end;

end.
