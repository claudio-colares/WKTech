unit uClasseCliente;

interface

uses
  FireDAC.Comp.Client;

type
  TCliente = class

  private
    FCodigo  : Integer;
    FNome    : string;
    FCidade  : string;
    FUF      : string;

    FConexao : TFDConnection;


  public
    constructor Create(AConexao: TFDConnection);
    function GetClienteByID(IDCliente: Integer): TCliente;
    procedure Limpar;


    property Codigo: Integer read FCodigo write FCodigo;
    property Nome: string read FNome write FNome;
    property Cidade: string read FCidade write FCidade;
    property UF: string read FUF write FUF;
  end;

implementation

uses uFrmPedido;


constructor TCliente.Create(AConexao: TFDConnection);
begin
 FConexao := AConexao;
end;

function TCliente.GetClienteByID(IDCliente: Integer): TCliente;
var
  Cliente : TCliente;
  QryDados: TFDQuery;

begin
   Result   := nil;
   QryDados := TFDQuery.Create(nil) ;
   QryDados.Connection := FConexao;
  try



    try

    finally

    end;





  finally
     Result  := Cliente;
     Cliente.Free;
  end;

end;

procedure TCliente.Limpar;
begin
  FCodigo := 0;
  FNome   := '';
  FCidade := '';
  FUF     := '';
end;

end.
